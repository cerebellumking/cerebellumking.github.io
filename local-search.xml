<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>TypeScript学习</title>
    <link href="/2023/01/11/TypeScript%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/01/11/TypeScript%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>​JavaScript的超集，可以编译为JavaScript，添加了类型系统的JavaScript，可以适用于任何规模的系统。</p><h3 id="TypeScript特性"><a href="#TypeScript特性" class="headerlink" title="TypeScript特性"></a>TypeScript特性</h3><h4 id="类型系统"><a href="#类型系统" class="headerlink" title="类型系统"></a>类型系统</h4><h4 id="静态类型"><a href="#静态类型" class="headerlink" title="静态类型"></a>静态类型</h4><p>编译阶段就会进行类型检查、报错，JavaScript是动态类型。</p><h4 id="TypeScript是弱类型"><a href="#TypeScript是弱类型" class="headerlink" title="TypeScript是弱类型"></a>TypeScript是弱类型</h4><p>类型系统按照是否允许隐式类型转换分为强类型和弱类型。</p><h2 id="二、安装并编译TypeScript"><a href="#二、安装并编译TypeScript" class="headerlink" title="二、安装并编译TypeScript"></a>二、安装并编译TypeScript</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g typescript<br>tsc -v<br><br>tsc index.ts<br>tsc --outFile ./js/index.js index.ts<br></code></pre></td></tr></table></figure><h2 id="三、基本数据类型"><a href="#三、基本数据类型" class="headerlink" title="三、基本数据类型"></a>三、基本数据类型</h2><h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">isDone</span>: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;<br></code></pre></td></tr></table></figure><h3 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">num</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">myName</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;Tom&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">str</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">`Hello, my name is <span class="hljs-subst">$&#123;myName&#125;</span>`</span>;<br></code></pre></td></tr></table></figure><h3 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h3><p>只能赋值为null和undefined</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">alertName</span>(<span class="hljs-params"></span>): <span class="hljs-built_in">void</span>&#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;my name is Tom&#x27;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="四、任意值-Any"><a href="#四、任意值-Any" class="headerlink" title="四、任意值 Any"></a>四、任意值 Any</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">myFavouriteNumber</span>: <span class="hljs-built_in">any</span> = <span class="hljs-string">&#x27;seven&#x27;</span>;<br>myFavouriteNumber = <span class="hljs-number">7</span>;<br></code></pre></td></tr></table></figure><h2 id="五、类型推论"><a href="#五、类型推论" class="headerlink" title="五、类型推论"></a>五、类型推论</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;seven&#x27;</span>;<br>str = <span class="hljs-number">7</span>; <span class="hljs-comment">//报错</span><br></code></pre></td></tr></table></figure><h2 id="六、联合类型"><a href="#六、联合类型" class="headerlink" title="六、联合类型"></a>六、联合类型</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">myFavouriteNumber</span>: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span>;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getLength</span>(<span class="hljs-params">something: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">string</span>&#123;<br>    <span class="hljs-keyword">return</span> something.<span class="hljs-title function_">toString</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="七、接口"><a href="#七、接口" class="headerlink" title="七、接口"></a>七、接口</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Person</span>&#123;<br>    <span class="hljs-keyword">readonly</span> <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>    age?: <span class="hljs-built_in">number</span>; <span class="hljs-comment">//可选属性</span><br>    [<span class="hljs-attr">propName</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span>;<span class="hljs-comment">//任意属性</span><br>&#125;<br><br><span class="hljs-keyword">let</span> <span class="hljs-attr">tom</span>: <span class="hljs-title class_">Person</span> = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Tom&#x27;</span>,<br>    <span class="hljs-attr">age</span>:<span class="hljs-number">25</span><br>&#125;<br><br>tom.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;1&#x27;</span>;<span class="hljs-comment">//error</span><br></code></pre></td></tr></table></figure><h2 id="八、数组"><a href="#八、数组" class="headerlink" title="八、数组"></a>八、数组</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">fibonacci</span>: <span class="hljs-built_in">number</span>[] = [<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>];<br>fibonacci.<span class="hljs-title function_">push</span>(<span class="hljs-number">8</span>);<br></code></pre></td></tr></table></figure><h2 id="九、函数01，函数声明、函数表达式"><a href="#九、函数01，函数声明、函数表达式" class="headerlink" title="九、函数01，函数声明、函数表达式"></a>九、函数01，函数声明、函数表达式</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sum</span>(<span class="hljs-params">x: <span class="hljs-built_in">number</span>, y: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">number</span>&#123;<br>    <span class="hljs-keyword">return</span> x+y;<br>&#125;<br><br><span class="hljs-keyword">let</span> mySum = <span class="hljs-keyword">function</span> (<span class="hljs-params">x: <span class="hljs-built_in">number</span>, y: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">number</span>&#123;<br>    <span class="hljs-keyword">return</span> x+y;<br>&#125; <br><br><span class="hljs-keyword">let</span> <span class="hljs-attr">mySum</span>: <span class="hljs-function">(<span class="hljs-params">x: <span class="hljs-built_in">number</span>, y: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">number</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">x: <span class="hljs-built_in">number</span>, y: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">number</span>&#123;<br>    <span class="hljs-keyword">return</span> x+y;<br>&#125; <br><br><span class="hljs-comment">//接口定义函数</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">SerachFunc</span> (<br>(source: <span class="hljs-built_in">string</span>, subString: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">boolean</span>;<br>)<br><br>let mySearch: <span class="hljs-title class_">SearchFunc</span>;<br>mySearch = function(source: <span class="hljs-built_in">string</span>, subString: <span class="hljs-built_in">string</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="十、函数02，可选参数与默认值"><a href="#十、函数02，可选参数与默认值" class="headerlink" title="十、函数02，可选参数与默认值"></a>十、函数02，可选参数与默认值</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sum</span>(<span class="hljs-params">x: <span class="hljs-built_in">number</span>, y: <span class="hljs-built_in">number</span>, z?: <span class="hljs-built_in">number</span>, t: <span class="hljs-built_in">number</span> = <span class="hljs-number">10</span></span>): <span class="hljs-built_in">number</span>&#123;<br>    <span class="hljs-keyword">if</span>(z)&#123;<br>        x = x + z;<br>    &#125;<br>    <span class="hljs-keyword">return</span> x + y;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="十一、函数03，剩余参数、重载"><a href="#十一、函数03，剩余参数、重载" class="headerlink" title="十一、函数03，剩余参数、重载"></a>十一、函数03，剩余参数、重载</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">push</span>(<span class="hljs-params">array: <span class="hljs-built_in">any</span>[], ...items: <span class="hljs-built_in">any</span>[]</span>) &#123;<br>    items.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>)&#123;<br>        array.<span class="hljs-title function_">push</span>(item);<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="十二、类型断言"><a href="#十二、类型断言" class="headerlink" title="十二、类型断言"></a>十二、类型断言</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">//手动指定一个值的类型</span><br>值 <span class="hljs-keyword">as</span> 类型<br>&lt;类型&gt;值<br><span class="hljs-comment">//将一个联合类型断言为其中一个类型</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Cat</span>&#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>    <span class="hljs-title function_">run</span>(): <span class="hljs-built_in">void</span>;<br>&#125;<br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Fish</span>&#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>    <span class="hljs-title function_">swim</span>(): <span class="hljs-built_in">void</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getName</span>(<span class="hljs-params">animal: Cat | Fish</span>)&#123;<br>    (animal <span class="hljs-keyword">as</span> <span class="hljs-title class_">Fish</span>).<span class="hljs-title function_">swim</span>();<br>&#125;<br><br><span class="hljs-comment">//将父类断言为更加具体的子类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ApiError</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Error</span>&#123;<br>    <span class="hljs-attr">code</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">HttpError</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Error</span> &#123;<br>    <span class="hljs-attr">statusCode</span>: <span class="hljs-built_in">number</span> =  <span class="hljs-number">200</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isApiError</span>(<span class="hljs-params">error: <span class="hljs-built_in">Error</span></span>) &#123;<br>    <span class="hljs-comment">//用在接口</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> (error <span class="hljs-keyword">as</span> <span class="hljs-title class_">ApiError</span>).<span class="hljs-property">code</span> === <span class="hljs-string">&#x27;number&#x27;</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-comment">//类</span><br>    <span class="hljs-keyword">instanceof</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-comment">//断言为any</span><br><span class="hljs-variable language_">window</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span>;<br><br><span class="hljs-comment">//将any断言为具体的类型</span><br><br><span class="hljs-comment">//类型断言限制, 有共同属性</span><br><br><span class="hljs-comment">//双重断言，别xjb用，没啥用</span><br><span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span> <span class="hljs-keyword">as</span> xxxx<br><br><span class="hljs-comment">//类型断言只会影响ts编译时的类型，在编译结果中会被删除</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">toBoolean</span>(<span class="hljs-params">something: <span class="hljs-built_in">any</span></span>): <span class="hljs-built_in">boolean</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Boolean</span>(something);<br>&#125;<br><br><span class="hljs-comment">//泛型，更加规范的实现对getCacheData返回值的约束</span><br><span class="hljs-keyword">function</span> getCacheData&lt;T&gt;(<span class="hljs-attr">key</span>: <span class="hljs-built_in">string</span>): T&#123;<br>    <span class="hljs-keyword">return</span> (<span class="hljs-variable language_">window</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span>).<span class="hljs-property">cache</span>[key];<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="十三、元组"><a href="#十三、元组" class="headerlink" title="十三、元组"></a>十三、元组</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">tom</span>: [<span class="hljs-built_in">string</span>,<span class="hljs-built_in">number</span>] = [<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-number">25</span>];<br>tom.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;123&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="十四、枚举"><a href="#十四、枚举" class="headerlink" title="十四、枚举"></a>十四、枚举</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Days</span> &#123;<span class="hljs-title class_">Sun</span>,<span class="hljs-title class_">Mon</span>&#125;;<br></code></pre></td></tr></table></figure><h2 id="十五、类"><a href="#十五、类" class="headerlink" title="十五、类"></a>十五、类</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">get</span> <span class="hljs-title function_">name</span>()&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">set</span> <span class="hljs-title function_">name</span>(<span class="hljs-params">value</span>)&#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> _name;<br>    <br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name: <span class="hljs-built_in">string</span></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">_name</span> = name;<br>    &#125;<br>    <br>    <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">`My name is <span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>._name&#125;</span>`</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>通用</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Github搭建博客</title>
    <link href="/2023/01/10/Hexo+Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/01/10/Hexo+Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo-Github环境搭建"><a href="#Hexo-Github环境搭建" class="headerlink" title="Hexo+Github环境搭建"></a>Hexo+Github环境搭建</h2><h3 id="使用node-js安装Hexo"><a href="#使用node-js安装Hexo" class="headerlink" title="使用node.js安装Hexo"></a>使用node.js安装Hexo</h3><p>需要先安装node.js，直接前往官网下载安装即可，<a href="https://nodejs.org/zh-cn/">官网地址</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看node.js环境是否搭建完成</span><br>node -v <br>npm -v<br><br><span class="hljs-comment">#win安装hexo</span><br>npm install -g hexo-cli<br><span class="hljs-comment">#Mac安装hexo</span><br>sudo npm install -g hexo-cli<br><br><span class="hljs-comment">#检查hexo是否安装成功</span><br>hexo -v<br></code></pre></td></tr></table></figure><h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在指定目录下</span><br>hexo init blog<br>npm install<br>hexo s -p &#123;port&#125; <span class="hljs-comment">#默认端口4000</span><br></code></pre></td></tr></table></figure><h3 id="部署至GitHub"><a href="#部署至GitHub" class="headerlink" title="部署至GitHub"></a>部署至GitHub</h3><ul><li>创建仓库{username}.github.io</li><li>本地安装git环境，并配置到GitHub的ssh，<a href="https://www.cnblogs.com/hdlan/p/14395681.html">教程</a></li><li>修改本地博客文件夹下的<code>_config.yml</code><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:&#123;username&#125;/&#123;username&#125;.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure></li><li>部署博客（配置完ssh后不需要输入GitHub账号密码）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br>hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure></li></ul><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;xxx&quot;</span><br></code></pre></td></tr></table></figure><p>名为<code>xxx.md</code>的文件会建在目录<code>.../source/_posts</code>下。<br>所有的文章都会以<code>md</code>形式保存在<code>_post</code>文件夹中，只要在<code>_post</code>文件夹中新建<code>md</code>类型的文档，就能在执行<code>hexo g</code>的时候被渲染。新建的文章头需要添加一些信息，如下所示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">---<br><span class="hljs-attr">title</span>: xxx    <span class="hljs-comment">//在此处添加你的标题。</span><br><span class="hljs-attr">date</span>: <span class="hljs-number">2023</span>-<span class="hljs-number">1</span>-<span class="hljs-number">10</span> <span class="hljs-number">13</span>:<span class="hljs-number">38</span>:<span class="hljs-number">49</span>   <span class="hljs-comment">//在此处输入编辑这篇文章的时间。</span><br><span class="hljs-attr">tags</span>: xxx    <span class="hljs-comment">//在此处输入这篇文章的标签。</span><br><span class="hljs-attr">categories</span>: xxx    <span class="hljs-comment">//在此处输入这篇文章的分类。</span><br>---<br></code></pre></td></tr></table></figure><p>文章编辑完成后，终端<code>cd</code>到<code>blog</code>文件夹下，依次执行如下命令来发布：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>至此，搭建基于 GitHub Pages + Hexo 的博客就完成了，可以通过{username}.github.io进行访问。</p><h3 id="选取主题"><a href="#选取主题" class="headerlink" title="选取主题"></a>选取主题</h3><p>如果您喜欢 Hexo 默认的主题的话，可以跳过这部分。如果您想换一个主题的话，可以到<a href="https://hexo.io/themes/">Hexo主题</a>中挑选自己中意的主题。<br>本博客使用了fluid主题，<a href="https://hexo.fluid-dev.com/docs">fluid用户手册</a><br>终端<code>cd</code>到<code>blog/themes</code>目录下将<a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a>加入：<br>打开<code>blog</code>目录下的<code>_config.yml</code>，找到<code>theme: landscape</code>修改为<code>theme: fluid</code>，将开头的<code>language: en</code>修改为<code>language: zh-CN</code>。<br>终端<code>cd</code>到<code>blog</code>目录下，依次执行如下命令(每次部署文章的步骤)：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>至于更改博客的名称、描述、头像等，只需要修改<code>blog/_config.yml</code>文件和<code>blog/themes/fluid/_config.yml</code>文件中对应的属性名称即可(不要忘记冒号<code>:</code>后加空格),可以在fluid手册中查看。</p><h3 id="使用vscode-阿里云oss构建图床"><a href="#使用vscode-阿里云oss构建图床" class="headerlink" title="使用vscode+阿里云oss构建图床"></a>使用vscode+阿里云oss构建图床</h3><p>windows下ctrl+alt+U从剪贴板粘贴图片，ctrl+alt+E打开资源管理器选择图片，这是最常用的两个快捷键，其他快捷键如图所示。<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2xlaXl1MTk5Ny9QaWNCZWRAbWFzdGVyL2Jsb2dzL3BpY3R1cmVzLzIwMjAwNTI3MjE1MTQ3LnBuZw?x-oss-process=image/format,png" alt="20200527215147"></p>]]></content>
    
    
    <categories>
      
      <category>通用</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/10/hello-world/"/>
    <url>/2023/01/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
